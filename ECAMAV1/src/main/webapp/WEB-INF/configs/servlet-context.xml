<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing 
    infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
    up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
    in the /WEB-INF/views directory -->
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
                destroy-method="close">
        <beans:property name="driverClassName" value="org.postgresql.Driver" />
        <beans:property name="url" value="jdbc:postgresql://localhost:5432/TestDB" />
        <beans:property name="username" value="postgres" />
        <beans:property name="password" value="password" />
    </beans:bean>

    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
                class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>com.ecama.model.Person</beans:value>
                <beans:value>com.ecama.model.User</beans:value>
                <beans:value>com.ecama.model.Contents</beans:value>
                <beans:value>com.ecama.model.Images</beans:value>
                <beans:value>com.ecama.model.Files</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</beans:prop>
                <beans:prop key="hibernate.hbm2ddl.auto">create-drop</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
	
    <!--spring mvc mail sender-->
    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <!-- SMTP settings -->
        <beans:property name="host" value="smtp.gmail.com" />
        <beans:property name="port" value="587" />
        <beans:property name="username" value="" />
        <beans:property name="password" value="" />
 
        <beans:property name="javaMailProperties">
            <!-- additional properties specific to JavaMail -->
            <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    <!--Spring mvc email error-->
    <beans:bean
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <beans:property name="exceptionMappings">
            <beans:props>
                <beans:prop key="java.lang.Exception">Error_1</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    <!--CommonsMultipartResolver bean: Spring needs this bean in order to intercept the request to read upload files.-->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="10242880" />
        <beans:property name="maxInMemorySize" value="1048576" />
    </beans:bean>
    	  
    <beans:bean id="personDAO" class="com.ecama.dao.PersonDAOImpl">
        <!--<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />-->
    </beans:bean>
    <beans:bean id="personService" class="com.ecama.service.PersonServiceImpl">
        <!--<beans:property name="personDAO" ref="personDAO"></beans:property>-->
    </beans:bean>
    <beans:bean id="userDAO" class="com.ecama.dao.UserDAOImpl">
     
    </beans:bean>
    <beans:bean id="userService" class="com.ecama.service.UserServiceImpl">
     
    </beans:bean>
    
    <beans:bean id="contentDAO" class="com.ecama.dao.ContestDAOImpl">
    </beans:bean>
    
    <beans:bean id="contentService" class="com.ecama.service.ContentServiceImpl">
    </beans:bean>
    
    <beans:bean id="imagesDAO" class="com.ecama.dao.ImagesDAOImpl">
    </beans:bean>
    
    <beans:bean id="imagesService" class="com.ecama.service.ImagesServiceImpl">
    </beans:bean>
    
    <beans:bean id="filesDAO" class="com.ecama.dao.FilesDAOImpl">
    
    </beans:bean>
    <beans:bean id="filesService" class="com.ecama.service.FilesServiceImpl">
     
    </beans:bean>

    <context:component-scan base-package="com.ecama.controller" />
    <context:component-scan base-package="com.ecama.utils" />
	
    <tx:annotation-driven transaction-manager="transactionManager"/>
	
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>


</beans:beans>
